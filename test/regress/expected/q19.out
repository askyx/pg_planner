select query from tpch_queries(19); \gset
                                  query                                   
--------------------------------------------------------------------------
 SELECT                                                                  +
     sum(l_extendedprice * (1 - l_discount)) AS revenue                  +
 FROM                                                                    +
     lineitem,                                                           +
     part                                                                +
 WHERE (p_partkey = l_partkey                                            +
     AND p_brand = 'Brand#12'                                            +
     AND p_container IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')       +
     AND l_quantity >= 1                                                 +
     AND l_quantity <= 1 + 10                                            +
     AND p_size BETWEEN 1 AND 5                                          +
     AND l_shipmode IN ('AIR', 'AIR REG')                                +
     AND l_shipinstruct = 'DELIVER IN PERSON')                           +
     OR (p_partkey = l_partkey                                           +
         AND p_brand = 'Brand#23'                                        +
         AND p_container IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')+
         AND l_quantity >= 10                                            +
         AND l_quantity <= 10 + 10                                       +
         AND p_size BETWEEN 1 AND 10                                     +
         AND l_shipmode IN ('AIR', 'AIR REG')                            +
         AND l_shipinstruct = 'DELIVER IN PERSON')                       +
     OR (p_partkey = l_partkey                                           +
         AND p_brand = 'Brand#34'                                        +
         AND p_container IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')   +
         AND l_quantity >= 20                                            +
         AND l_quantity <= 20 + 10                                       +
         AND p_size BETWEEN 1 AND 15                                     +
         AND l_shipmode IN ('AIR', 'AIR REG')                            +
         AND l_shipinstruct = 'DELIVER IN PERSON');                      +
 
(1 row)

select transform_query(query) from tpch_queries(19);
                                            transform_query                                            
-------------------------------------------------------------------------------------------------------
 LogicalGbAgg: group: , agg: Pj(revenue sum((1760 l_extendedprice (1759 (1740 Constant) l_discount))))+
 └── LogicalJoin: INNER                                                                               +
     ├── LogicalGet: lineitem                                                                         +
     └── LogicalGet: part                                                                             +
 
(1 row)

set pg_planner.enable_planner to on;
explain verbose :query


 Aggregate  (cost=0.00..100.00 rows=1000 width=8)
   Output: sum((lineitem.l_extendedprice * ("numeric"(1) - lineitem.l_discount)))
   ->  Nested Loop  (cost=0.00..100.00 rows=1000 width=8)
         Output: lineitem.l_extendedprice, lineitem.l_discount
         Join Filter: (((part.p_partkey = lineitem.l_partkey) AND (part.p_brand = 'Brand#12'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= "numeric"(1)) AND (lineitem.l_quantity <= "numeric"((1 + 10))) AND ((part.p_size >= 1) AND (part.p_size <= 5)) AND (lineitem.l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (lineitem.l_shipinstruct = 'DELIVER IN PERSON'::bpchar)) OR ((part.p_partkey = lineitem.l_partkey) AND (part.p_brand = 'Brand#23'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= "numeric"(10)) AND (lineitem.l_quantity <= "numeric"((10 + 10))) AND ((part.p_size >= 1) AND (part.p_size <= 10)) AND (lineitem.l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (lineitem.l_shipinstruct = 'DELIVER IN PERSON'::bpchar)) OR ((part.p_partkey = lineitem.l_partkey) AND (part.p_brand = 'Brand#34'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= "numeric"(20)) AND (lineitem.l_quantity <= "numeric"((20 + 10))) AND ((part.p_size >= 1) AND (part.p_size <= 15)) AND (lineitem.l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (lineitem.l_shipinstruct = 'DELIVER IN PERSON'::bpchar)))
         ->  Seq Scan on public.lineitem  (cost=0.00..100.00 rows=1000 width=8)
               Output: lineitem.l_discount, lineitem.l_extendedprice, lineitem.l_partkey, lineitem.l_shipmode, lineitem.l_quantity, lineitem.l_shipinstruct
         ->  Seq Scan on public.part  (cost=0.00..100.00 rows=1000 width=8)
               Output: part.p_size, part.p_container, part.p_brand, part.p_partkey
 Optimizer: PGP
(10 rows)

:query
 revenue 
---------
        
(1 row)

set pg_planner.enable_planner to off;
explain verbose :query


 Aggregate  (cost=24.26..24.27 rows=1 width=32)
   Output: sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))
   ->  Nested Loop  (cost=0.14..24.25 rows=1 width=36)
         Output: lineitem.l_extendedprice, lineitem.l_discount
         Inner Unique: true
         ->  Seq Scan on public.lineitem  (cost=0.00..16.00 rows=1 width=58)
               Output: lineitem.l_orderkey, lineitem.l_partkey, lineitem.l_suppkey, lineitem.l_linenumber, lineitem.l_quantity, lineitem.l_extendedprice, lineitem.l_discount, lineitem.l_tax, lineitem.l_returnflag, lineitem.l_linestatus, lineitem.l_shipdate, lineitem.l_commitdate, lineitem.l_receiptdate, lineitem.l_shipinstruct, lineitem.l_shipmode, lineitem.l_comment
               Filter: ((lineitem.l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (lineitem.l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((lineitem.l_quantity >= '1'::numeric) AND (lineitem.l_quantity <= '11'::numeric)) OR ((lineitem.l_quantity >= '10'::numeric) AND (lineitem.l_quantity <= '20'::numeric)) OR ((lineitem.l_quantity >= '20'::numeric) AND (lineitem.l_quantity <= '30'::numeric))))
         ->  Index Scan using part_pkey on public.part  (cost=0.14..8.24 rows=1 width=96)
               Output: part.p_partkey, part.p_name, part.p_mfgr, part.p_brand, part.p_type, part.p_size, part.p_container, part.p_retailprice, part.p_comment
               Index Cond: (part.p_partkey = lineitem.l_partkey)
               Filter: ((part.p_size >= 1) AND (((part.p_brand = 'Brand#12'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#23'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#34'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (part.p_size <= 15))) AND (((part.p_brand = 'Brand#12'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (lineitem.l_quantity >= '1'::numeric) AND (lineitem.l_quantity <= '11'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#23'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (lineitem.l_quantity >= '10'::numeric) AND (lineitem.l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#34'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (lineitem.l_quantity >= '20'::numeric) AND (lineitem.l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
(12 rows)

:query
 revenue 
---------
        
(1 row)

