select query from tpch_queries(1); \gset
                                  query                                   
--------------------------------------------------------------------------
 SELECT                                                                  +
     l_returnflag,                                                       +
     l_linestatus,                                                       +
     sum(l_quantity) AS sum_qty,                                         +
     sum(l_extendedprice) AS sum_base_price,                             +
     sum(l_extendedprice * (1 - l_discount)) AS sum_disc_price,          +
     sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) AS sum_charge,+
     avg(l_quantity) AS avg_qty,                                         +
     avg(l_extendedprice) AS avg_price,                                  +
     avg(l_discount) AS avg_disc,                                        +
     count(*) AS count_order                                             +
 FROM                                                                    +
     lineitem                                                            +
 WHERE                                                                   +
     l_shipdate <= CAST('1998-09-02' AS date)                            +
 GROUP BY                                                                +
     l_returnflag,                                                       +
     l_linestatus                                                        +
 ORDER BY                                                                +
     l_returnflag,                                                       +
     l_linestatus;                                                       +
 
(1 row)

select transform_query(query) from tpch_queries(1);
  transform_query   
--------------------
 LogicalGbAgg      +
 └── LogicalSelect +
     └── LogicalGet+
 
(1 row)

set pg_planner.enable_planner to on;
explain verbose :query
                                                                                                                                     QUERY PLAN                                                                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 GroupAggregate  (cost=0.00..100.00 rows=1000 width=8)
   Output: l_returnflag, l_linestatus, sum(l_quantity), sum(l_extendedprice), sum((l_extendedprice * ("numeric"(1) - l_discount))), sum(((l_extendedprice * ("numeric"(1) - l_discount)) * ("numeric"(1) + l_tax))), avg(l_quantity), avg(l_extendedprice), avg(l_discount), count()
   Group Key: lineitem.l_returnflag, lineitem.l_linestatus
   ->  Sort  (cost=0.00..100.00 rows=1000 width=8)
         Output: l_returnflag, l_quantity, l_tax, l_discount, l_linestatus, l_extendedprice
         Sort Key: lineitem.l_returnflag, lineitem.l_linestatus
         ->  Seq Scan on public.lineitem  (cost=0.00..100.00 rows=1000 width=8)
               Output: l_returnflag, l_quantity, l_tax, l_discount, l_linestatus, l_extendedprice
               Filter: (lineitem.l_shipdate <= '09-02-1998'::date)
 Optimizer: PGP
(10 rows)

:query
 l_returnflag | l_linestatus | sum_qty | sum_base_price | sum_disc_price | sum_charge | avg_qty | avg_price | avg_disc | count_order 
--------------+--------------+---------+----------------+----------------+------------+---------+-----------+----------+-------------
(0 rows)

set pg_planner.enable_planner to off;
explain verbose :query
                                                                                                                                      QUERY PLAN                                                                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 GroupAggregate  (cost=14.53..18.89 rows=67 width=248)
   Output: l_returnflag, l_linestatus, sum(l_quantity), sum(l_extendedprice), sum((l_extendedprice * ('1'::numeric - l_discount))), sum(((l_extendedprice * ('1'::numeric - l_discount)) * ('1'::numeric + l_tax))), avg(l_quantity), avg(l_extendedprice), avg(l_discount), count(*)
   Group Key: lineitem.l_returnflag, lineitem.l_linestatus
   ->  Sort  (cost=14.53..14.70 rows=67 width=88)
         Output: l_returnflag, l_linestatus, l_quantity, l_extendedprice, l_discount, l_tax
         Sort Key: lineitem.l_returnflag, lineitem.l_linestatus
         ->  Seq Scan on public.lineitem  (cost=0.00..12.50 rows=67 width=88)
               Output: l_returnflag, l_linestatus, l_quantity, l_extendedprice, l_discount, l_tax
               Filter: (lineitem.l_shipdate <= '09-02-1998'::date)
(9 rows)

:query
 l_returnflag | l_linestatus | sum_qty | sum_base_price | sum_disc_price | sum_charge | avg_qty | avg_price | avg_disc | count_order 
--------------+--------------+---------+----------------+----------------+------------+---------+-----------+----------+-------------
(0 rows)

